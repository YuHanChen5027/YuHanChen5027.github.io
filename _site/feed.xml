<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-04-27T14:26:47+08:00</updated><id>http://localhost:4000/</id><title type="html">陈宇瀚</title><subtitle>Welcome to 陈宇瀚 blog, I will update the article about Android&amp;Python or more.</subtitle><entry><title type="html">Android 根据已装应用的签名限制其他应用安装</title><link href="http://localhost:4000/article/2018/04/26/Android-%E6%A0%B9%E6%8D%AE%E5%B7%B2%E8%A3%85%E5%BA%94%E7%94%A8%E7%9A%84%E7%AD%BE%E5%90%8D%E9%99%90%E5%88%B6%E5%85%B6%E4%BB%96%E5%BA%94%E7%94%A8%E5%AE%89%E8%A3%85.html" rel="alternate" type="text/html" title="Android 根据已装应用的签名限制其他应用安装" /><published>2018-04-26T16:41:42+08:00</published><updated>2018-04-26T16:41:42+08:00</updated><id>http://localhost:4000/article/2018/04/26/Android%20%E6%A0%B9%E6%8D%AE%E5%B7%B2%E8%A3%85%E5%BA%94%E7%94%A8%E7%9A%84%E7%AD%BE%E5%90%8D%E9%99%90%E5%88%B6%E5%85%B6%E4%BB%96%E5%BA%94%E7%94%A8%E5%AE%89%E8%A3%85</id><content type="html" xml:base="http://localhost:4000/article/2018/04/26/Android-%E6%A0%B9%E6%8D%AE%E5%B7%B2%E8%A3%85%E5%BA%94%E7%94%A8%E7%9A%84%E7%AD%BE%E5%90%8D%E9%99%90%E5%88%B6%E5%85%B6%E4%BB%96%E5%BA%94%E7%94%A8%E5%AE%89%E8%A3%85.html">&lt;p&gt;参考文章：https://blog.csdn.net/loongembedded/article/details/54090873
只有使用特定签名签的apk才可以安装，其他任何apk都不能安装&lt;/p&gt;

&lt;p&gt;最好是应用预装一个使用对应签名的应用&lt;/p&gt;

&lt;p&gt;需要修改的文件有以下几个
/frameworks/base/services/core/java/com/android/server/pm/PackageManagerService.java&lt;/p&gt;

&lt;p&gt;/frameworks/base/core/java/android/content/pmPackageManager.java&lt;/p&gt;

&lt;p&gt;/packages/apps/PackageInstaller/src/com/android/packageinstaller/InstallAppProgress.java&lt;/p&gt;

&lt;p&gt;/packages/apps/PackageInstaller/res/values/string.xml&lt;/p&gt;

&lt;h2 id=&quot;1-packagemanagerservicejava&quot;&gt;1 PackageManagerService.java&lt;/h2&gt;
&lt;p&gt;/frameworks/base/services/core/java/com/android/server/pm/PackageManagerService.java
添加getSignaturesByPackage()方法&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//add start
private Signature[] getSignaturesByPackage(){
Signature[] signatures = null;
//已签名的已安装应用包名，与该应用签名不同的应用无法安装
String packageName = &quot;com.xxxx.xxxxx&quot;;
PackageSetting ps = mSettings.mPackages.get(packageName);
if (ps != null) {
PackageParser.Package pkg = ps.pkg;
if (pkg == null) {
pkg = new PackageParser.Package(packageName);
pkg.applicationInfo.packageName = packageName;
pkg.applicationInfo.flags = ps.pkgFlags | ApplicationInfo.FLAG_IS_DATA_ONLY;
pkg.applicationInfo.publicSourceDir = ps.resourcePathString;
pkg.applicationInfo.sourceDir = ps.codePathString;
pkg.applicationInfo.dataDir = getDataPathForPackage(packageName, 0).getPath();
// pkg.applicationInfo.nativeLibraryDir = ps.nativeLibraryPathString;
}

PackageInfo packageInfo2 = generatePackageInfo(pkg, PackageManager.GET_SIGNATURES, UserHandle.getCallingUserId());

if(packageInfo2 != null){
signatures = packageInfo2.signatures;
}
}
mIsInstallApkFlag = false;
return signatures;
}
//add end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;在scanPackageLI方法下加入如下代码&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;private PackageParser.Package scanPackageLI(PackageParser.Package pkg, int parseFlags , int scanFlags, long currentTime, UserHandle user) throws PackageManagerException {
boolean success = false;
//add start  
//获得安装的应用的签名信息
Signature[] originalSignatures = getSignaturesByPackage();
if (originalSignatures != null) {
if (compareSignatures(originalSignatures, pkg.mSignatures) != PackageManager.SIGNATURE_MATCH) {
int mLastScanError = PackageManager.INSTALL_FAILED_INVALID_SIGNATURES;
throw new PackageManagerException(mLastScanError,
&quot;禁止安装，签名不符&quot;);
}
}
//add end
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;同时要import缺少的类。&lt;/p&gt;
&lt;h2 id=&quot;2-packagemanagerjava&quot;&gt;2 PackageManager.java&lt;/h2&gt;
&lt;p&gt;/frameworks/base/core/java/android/content/pmPackageManager.java
加入错误代码 INSTALL_FAILED_INVALID_SIGNATURES&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/** 
* Installation return code: this is passed to the {@link IPackageInstallObserver} by 
* {@link #installPackage(android.net.Uri, IPackageInstallObserver, int)} if 
* the installed package hasn't the expected signature 
*  @hide 
*/
public static final int INSTALL_FAILED_INVALID_SIGNATURES = -26;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;3-installappprogressjava&quot;&gt;3 InstallAppProgress.java&lt;/h2&gt;
&lt;p&gt;/packages/apps/PackageInstaller/src/com/android/packageinstaller/InstallAppProgress.java
加入针对添加的错误代码的处理&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;private Handler mHandler = new Handler() {  
public void handleMessage(Message msg) {  
switch (msg.what) {  
...
//add start
} else if (msg.arg1 ==  PackageManager.INSTALL_FAILED_INVALID_SIGNATURES){
// Generic error handling for all other error codes.  
centerTextDrawable.setLevel(1);
centerExplanationLabel = getExplanationFromErrorCode(msg.arg1);
//centerTextLabel = R.string.install_failed_invalid_signature;  
centerTextLabel = R.string.install_failed_invalid_signature;
mLaunchButton.setVisibility(View.INVISIBLE);
//add end
}  else {
// Generic error handling for all other error codes.
centerTextDrawable.setLevel(1);
centerExplanationLabel = getExplanationFromErrorCode(msg.arg1);
centerTextLabel = R.string.install_failed;
mLaunchButton.setVisibility(View.INVISIBLE);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;4-stringsxml&quot;&gt;4 strings.xml&lt;/h2&gt;
&lt;p&gt;/packages/apps/PackageInstaller/res/values/string.xml
添加错误信息install_failed_invalid_signature&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;string name=&quot;install_failed_invalid_signature&quot;&amp;gt;禁止安装，签名不符&amp;lt;/string&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">参考文章：https://blog.csdn.net/loongembedded/article/details/54090873 只有使用特定签名签的apk才可以安装，其他任何apk都不能安装</summary></entry><entry><title type="html">自封装的MediaPlayer 结合 SurfaceView 和 TextureView 的播放视频控件</title><link href="http://localhost:4000/article/2017/11/28/%E8%87%AA%E5%B0%81%E8%A3%85MeidaPlayer+SurfaceView-%E5%92%8C-TextureView%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E6%8E%A7%E4%BB%B6.html" rel="alternate" type="text/html" title="自封装的MediaPlayer 结合 SurfaceView 和 TextureView 的播放视频控件" /><published>2017-11-28T15:40:10+08:00</published><updated>2017-11-28T15:40:10+08:00</updated><id>http://localhost:4000/article/2017/11/28/%E8%87%AA%E5%B0%81%E8%A3%85MeidaPlayer+SurfaceView%20%E5%92%8C%20TextureView%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E6%8E%A7%E4%BB%B6</id><content type="html" xml:base="http://localhost:4000/article/2017/11/28/%E8%87%AA%E5%B0%81%E8%A3%85MeidaPlayer+SurfaceView-%E5%92%8C-TextureView%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E6%8E%A7%E4%BB%B6.html">&lt;p&gt;自封装的MediaPlayer 结合 SurfaceView 和 TextureView 的播放视频控件
调用方法：
xml文件内添加&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;com.example.mvideoview.MyVideoView
android:id=&quot;@+id/videoview&quot;
android:layout_width=&quot;match_parent&quot;
android:layout_height=&quot;match_parent&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;com.example.mvideoview.MyTextureVideoView
android:id=&quot;@+id/videoview&quot;
android:layout_width=&quot;match_parent&quot;
android:layout_height=&quot;match_parent&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在界面内设置&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//播放路径
String url = &quot;&quot;;
myVideoView = findViewById(R.id.videoview);
myVideoView.setmOnProgressListener(new IMediaPlayer.OnProgressListener() {
@Override
public void onSurfaceCreated() {
//设置播放路径
myVideoView.setVideoURL(url);
}

@Override
public void onPreparedListener(IMediaPlayer mediaPlayer) {
//开始播放
mediaPlayer.start();
}

@Override
public void onTotleProgressListener(int totalProgress) {
//拿到总进度值，可以在这里设置seekbar的Max值
}

@Override
public void onPlayProgress(int progress) {
//进度播放回调，一秒一次
}

@Override
public void onCompletion() {
//播放完成时
}
});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;码云地址：[https://gitee.com/5027/VideoView] (https://gitee.com/5027/VideoView)&lt;/p&gt;</content><author><name></name></author><summary type="html">自封装的MediaPlayer 结合 SurfaceView 和 TextureView 的播放视频控件 调用方法： xml文件内添加 &amp;lt;com.example.mvideoview.MyVideoView android:id=&quot;@+id/videoview&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot; /&amp;gt; 或者 &amp;lt;com.example.mvideoview.MyTextureVideoView android:id=&quot;@+id/videoview&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot; /&amp;gt;</summary></entry><entry><title type="html">Mac下搭建nginx http点播服务器</title><link href="http://localhost:4000/article/2017/09/30/Mac%E4%B8%8B%E6%90%AD%E5%BB%BAnginx-http%E7%82%B9%E6%92%AD%E6%9C%8D%E5%8A%A1%E5%99%A8.html" rel="alternate" type="text/html" title="Mac下搭建nginx http点播服务器" /><published>2017-09-30T13:57:42+08:00</published><updated>2017-09-30T13:57:42+08:00</updated><id>http://localhost:4000/article/2017/09/30/Mac%E4%B8%8B%E6%90%AD%E5%BB%BAnginx%20http%E7%82%B9%E6%92%AD%E6%9C%8D%E5%8A%A1%E5%99%A8</id><content type="html" xml:base="http://localhost:4000/article/2017/09/30/Mac%E4%B8%8B%E6%90%AD%E5%BB%BAnginx-http%E7%82%B9%E6%92%AD%E6%9C%8D%E5%8A%A1%E5%99%A8.html">&lt;h2 id=&quot;第一步-下载nginx和nginx_mod_h264_streaming-227&quot;&gt;第一步 下载nginx和nginx_mod_h264_streaming-2.2.7&lt;/h2&gt;
&lt;p&gt;nginx下载地址：http://nginx.org/en/download.html&lt;/p&gt;

&lt;p&gt;nginx_mod_h264_streaming-2.2.7 下载地址:
http://h264.code-shop.com/download/nginx_mod_h264_streaming-2.2.7.tar.gz&lt;/p&gt;

&lt;p&gt;解压nginx 和 nginx_mod_h264_streaming 到同一目录下&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4273129-49feda242d8eafc2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;第二步-配置nginx&quot;&gt;第二步 配置nginx&lt;/h2&gt;
&lt;p&gt;进入文件夹nginx文件夹内，执行配置命令&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd nginx-1.13.5
./configure --add-module=../nginx_mod_h264_streaming-2.2.7 --with-http_flv_module --with-http_mp4_module
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;配置命令中 我们引入了第们刚才下载的三方模块nginx_mod_h264_streaming-2.2.7，以及nginx自带的mp4，flv模块&lt;/p&gt;

&lt;h2 id=&quot;第三步-编译安装nginx&quot;&gt;第三步 编译安装nginx&lt;/h2&gt;
&lt;h3 id=&quot;编译make&quot;&gt;编译make&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;make
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;如果出现以下的错误，我们直接找到对应的文件进行修改：
####错误1:
&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4273129-cf852fdfba918904.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;错误1&quot; /&gt;
我们进入”nginx_mod_h264_streaming-2.2.7/src/ “找到“ngx_http_streaming_module.c”文件并将zero_in_uri的方法注释或者删除&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4273129-df482fc56491eab1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot; /&gt;
保存后再次make&lt;/p&gt;

&lt;h4 id=&quot;错误2&quot;&gt;错误2:&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4273129-e21be49c01aedac2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;错误2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;提示我们文件中有未使用的变量，未使用的那直接注释或者删除掉。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4273129-2559f062cd07404a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;”nginx_mod_h264_streaming-2.2.7/src/ “找到“mp4_io.c”文件并将aac_channels的注释或者删除
&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4273129-213c4db80df76ae9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot; /&gt;
保存后再次make
之后如果还有这种类型的错，采用同样的方基本都能解决了&lt;/p&gt;

&lt;h3 id=&quot;安装install&quot;&gt;安装install&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;此时可能出现”Permission denied” 权限问题
那我们就加上sudo命令再执行&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4273129-3dd3b4e3f7333959.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot; /&gt;
我们可以看到安装目录是 “usr/local/nginx”&lt;/p&gt;

&lt;h3 id=&quot;第四步-配置nginxconf&quot;&gt;第四步 配置nginx.conf&lt;/h3&gt;
&lt;p&gt;nginx.conf文件在nginx目录下的conf文件夹下(即“usr/local/nginx/conf”)，
我们需要修改nginx.conf（直接修改需要权限，同样通过sudo命令开启vi编辑器进行修改）&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /
cd usr/local/nginx/conf
sudo vi  nginx.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;这里有许多相关的配置信息（要了解各种配置可以去看一下这个网页：http://www.cnblogs.com/hunttown/p/5759959.html），我们先不用管，直接进入http 的 server下修改为如下代码：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server {
listen       80;            #设置端口号
server_name  localhost;
root usr/local/nginx/;      #设置文件路径，默认也是nginx路径下

charset utf-8;              #设置编码

location /{                 #设置首页地址
root html;           #此处地址是usr/local/nginx/html
index index.html；   #对应打开的文件
}

location ~ \.mp4$ {
root movie;         #此处地址是usr/local/nginx/movie(电影就放在该文件夹下)
mp4;
}
location ~ \.flv {
root movie;
flv;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;第五步-启动nginx&quot;&gt;第五步 启动nginx&lt;/h3&gt;
&lt;p&gt;我们设定的视频读取路径是 “usr/local/nginx/movie”，将1.mp4视频文件放入该文件夹，启动nginx(nginx启动文件放在nginx下的sbin文件夹内)&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /
cd usr/local/nginx/sbin
sudo ./nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;此时在浏览器内输入 http://localhost:80/ 会显示如下界面(80为端口号，默认80不需要输入，如果修改了的话就要输入对应的端口号)：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4273129-a89d30a00ff2b89f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;即代表开启成功，此时我们在浏览器内输入地址”http://localhost:80/1.mp4”即可以播放对应的视频了&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4273129-888380bf0a3563f3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;nginx-启动关闭重启命令&quot;&gt;nginx 启动，关闭，重启命令&lt;/h3&gt;
&lt;p&gt;启动：./nginx
关闭：./nginx -s stop （快速停止nginx）
   ./nginx -s quit     (完整有序的停止nginx)
重启：./nginx -s reload （修改配置后重启）&lt;/p&gt;</content><author><name></name></author><summary type="html">第一步 下载nginx和nginx_mod_h264_streaming-2.2.7 nginx下载地址：http://nginx.org/en/download.html</summary></entry><entry><title type="html">Android引入IjkPlayer无法播放mkv格式视频的解决方案</title><link href="http://localhost:4000/article/2017/09/14/Android%E5%BC%95%E5%85%A5IjkPlayer%E6%97%A0%E6%B3%95%E6%92%AD%E6%94%BEmkv%E6%A0%BC%E5%BC%8F%E8%A7%86%E9%A2%91%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html" rel="alternate" type="text/html" title="Android引入IjkPlayer无法播放mkv格式视频的解决方案" /><published>2017-09-14T12:48:20+08:00</published><updated>2017-09-14T12:48:20+08:00</updated><id>http://localhost:4000/article/2017/09/14/Android%E5%BC%95%E5%85%A5IjkPlayer%E6%97%A0%E6%B3%95%E6%92%AD%E6%94%BEmkv%E6%A0%BC%E5%BC%8F%E8%A7%86%E9%A2%91%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88</id><content type="html" xml:base="http://localhost:4000/article/2017/09/14/Android%E5%BC%95%E5%85%A5IjkPlayer%E6%97%A0%E6%B3%95%E6%92%AD%E6%94%BEmkv%E6%A0%BC%E5%BC%8F%E8%A7%86%E9%A2%91%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html">&lt;h2 id=&quot;写在前面&quot;&gt;写在前面&lt;/h2&gt;
&lt;p&gt;项目中直接引用或者直接编译源码得到的ijkplayer在播放mkv文件时出现（-10000）的错误，去项目github查看了才知道，默认是不支持mkv和rmvb格式视频的播放的。
用了一天时间解决（为什么用了一天，因为我蠢啊），这里记录一下解决的方法（官方上面其实已经有了详细的教程，无奈我当时没有很认真看。)，这里为我自己这个新手做个记录：
仍然是采用编译源码的方式引入，只是需要按照官方的方法更改一下脚本文件
ijkplayer官方地址：https://github.com/Bilibili/ijkplayer
运行系统：Mac OS&lt;/p&gt;

&lt;h2 id=&quot;第一步-安装-homebrew-git-yamndk&quot;&gt;第一步 安装 homebrew, git, yam,ndk&lt;/h2&gt;
&lt;p&gt;这个网上教程很多，要不就不写了吧。。。。
&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4273129-aca8d434f081d2ba.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ndk的版本不要使用15，可以去网上下一个14的版本，否则可能会出现编译错误的状况。
ndk r14下载地址：&lt;a href=&quot;https://developer.android.google.cn/ndk/downloads/index.html&quot;&gt;https://developer.android.google.cn/ndk/downloads/index.htm&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;第二步-进行源码的下拉&quot;&gt;第二步 进行源码的下拉&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;在终端内输入以下命令：
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/Bilibili/ijkplayer.git ijkplayer-android
cd ijkplayer-android
git checkout -B latest k0.8.4
./init-android.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;第三步-修改编译ffmpeg用的脚本文件&quot;&gt;第三步 修改编译ffmpeg用的脚本文件&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;删除默认的脚本文件，复制module-default.sh脚本文件，将复制副本更改为默认脚本文件名module.sh
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd config
rm module.sh
ln -s module-default.sh module.sh
cd ..
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;第四步-编译源码&quot;&gt;第四步 编译源码&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd android/contrib
./compile-ffmpeg.sh clean
./compile-ffmpeg.sh all

cd ..
./compile-ijk.sh all
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;若执行编译失败提示&quot;&gt;若执行编译失败，提示&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;LOCAL_SRC_FILES points to a missing file
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;尝试更换ndk版本为r14&lt;/p&gt;

&lt;h5 id=&quot;若执行编译失败提示-1&quot;&gt;若执行编译失败，提示&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Android NDK: android-9 is unsupported. Using minimum supported version android-14。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;尝试去对应错误文件夹（如android/ijkplayer/ijkplayer-armv5/src/main下）修改AndroidManifest.xml中 android:minSdkVersion=”9”改为 android:minSdkVersion=”14”;&lt;/p&gt;

&lt;p&gt;同时对应的jni文件下的Application.mk 中 APP_PLATFORM := android-9 改为
APP_PLATFORM := android-14。&lt;/p&gt;

&lt;h2 id=&quot;第五步-项目中加入对应的so库和引用&quot;&gt;第五步 项目中加入对应的so库和引用&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;编译完成后我们将ijkplayer项目导入Android Studio中运行一下，
导入这个操作一定要做，不然不会生成
&lt;strong&gt;ijkplayer-java-release.aar&lt;/strong&gt;文件
导入的操作如下（选中build.gradle文件）：
&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4273129-6b29a223cf7d76e6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4273129-1061525861a30b7f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;之后将我们所需架构所对应的包含so文件的文件夹（例：ijkplayer-x86/src/main/libs/下的x86文件夹）和&lt;strong&gt;ijkplayer-java-release.aar&lt;/strong&gt;文件(在ijkplayer-java/build/output/aar文件夹下)拷贝到我们的项目libs目录下
&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4273129-cf93e742fe67dfae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;然后在build.gradle文件中添加&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;android{
...
sourceSets {
main {
jniLibs.srcDirs = ['libs']
}
}
}
repositories {
mavenCentral()
flatDir {
dirs 'libs'
}
}
dependencies {
...
compile(name: 'ijkplayer-java-release', ext: 'aar')
...
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;到此就搞定了，然后使用就好了，怎么使用，这个网上教程也很多，我也不讲了吧。。。。。。。
&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4273129-aca8d434f081d2ba.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">写在前面 项目中直接引用或者直接编译源码得到的ijkplayer在播放mkv文件时出现（-10000）的错误，去项目github查看了才知道，默认是不支持mkv和rmvb格式视频的播放的。 用了一天时间解决（为什么用了一天，因为我蠢啊），这里记录一下解决的方法（官方上面其实已经有了详细的教程，无奈我当时没有很认真看。)，这里为我自己这个新手做个记录： 仍然是采用编译源码的方式引入，只是需要按照官方的方法更改一下脚本文件 ijkplayer官方地址：https://github.com/Bilibili/ijkplayer 运行系统：Mac OS</summary></entry></feed>